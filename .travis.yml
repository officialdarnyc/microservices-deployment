language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

jobs:
  include:
    - stage: Build reverseproxy image
      script:
      - docker build -t reverseproxy ./project/udagram-reverseproxy
      - docker tag reverseproxy officialdarnyc/reverseproxy:v1

    - stage: Build udagram-api-user image
      script:
      - docker build -t udagram-api-user ./project/udagram-api-user
      - docker tag udagram-api-user officialdarnyc/udagram-api-user:v1

    - stage: Build udagram-api-feed image
      script:
      - docker build -t udagram-api-feed ./project/udagram-api-feed
      - docker tag udagram-api-feed officialdarnyc/udagram-api-feed:v1

    - stage: Build udagram-frontend image
      script:
      - docker build -t udagram-frontend ./project/udagram-frontend
      - docker tag udagram-frontend officialdarnyc/udagram-frontend:v1


# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push officialdarnyc/reverseproxy:v1
  - docker push officialdarnyc/udagram-api-user:v1
  - docker push officialdarnyc/udagram-api-feed:v1
  - docker push officialdarnyc/udagram-api-frontend:v1